// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface ButtonStoryblok {
  text: string;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface CardStoryblok {
  image?: AssetStoryblok;
  title: string;
  description: string;
  component: "card";
  _uid: string;
  [k: string]: any;
}

export interface CategoriesStoryblok {
  title: string;
  items: LinkStoryblok[];
  component: "categories";
  _uid: string;
  [k: string]: any;
}

export interface ConfigPageStoryblok {
  content: (FooterStoryblok | HeaderStoryblok)[];
  component: "config-page";
  _uid: string;
  [k: string]: any;
}

export interface ContactCardStoryblok {
  title?: string;
  name?: string;
  description?: string;
  phone?: string;
  image?: AssetStoryblok;
  component: "contact-card";
  _uid: string;
  [k: string]: any;
}

export interface ContactWrapperStoryblok {
  title?: string;
  contactCards?: ContactCardStoryblok[];
  component: "contact-wrapper";
  _uid: string;
  [k: string]: any;
}

export interface FooterStoryblok {
  content: FooterContentStoryblok[];
  socials: SocialStoryblok[];
  metaInfo: FooterMetaStoryblok[];
  component: "footer";
  _uid: string;
  [k: string]: any;
}

export interface FooterContentStoryblok {
  title?: string;
  groups: FooterContentGroupStoryblok[];
  component: "footer-content";
  _uid: string;
  [k: string]: any;
}

export interface FooterContentGroupStoryblok {
  links?: LinkStoryblok[];
  component: "footer-content-group";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface FooterMediaStoryblok {
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  image?: AssetStoryblok;
  component: "footer-media";
  _uid: string;
  [k: string]: any;
}

export interface FooterMetaStoryblok {
  copyright?: string;
  links: LinkStoryblok[];
  component: "footer-meta";
  _uid: string;
  [k: string]: any;
}

export interface GridStoryblok {
  items: (GridItemStoryblok | GridListStoryblok)[];
  styles: "" | "variant-1" | "variant-2" | "variant-3";
  component: "grid";
  _uid: string;
  [k: string]: any;
}

export interface GridItemStoryblok {
  asset?: AssetStoryblok;
  headline?: string;
  text?: string;
  linkTo?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "grid-item";
  _uid: string;
  [k: string]: any;
}

export interface GridListStoryblok {
  title: string;
  listItems: GridListItemStoryblok[];
  component: "grid-list";
  _uid: string;
  [k: string]: any;
}

export interface GridListItemStoryblok {
  text: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "grid-list-item";
  _uid: string;
  [k: string]: any;
}

export interface GridWrapperStoryblok {
  grids?: GridStoryblok[];
  component: "grid-wrapper";
  _uid: string;
  [k: string]: any;
}

export interface HeadStoryblok {
  logo?: AssetStoryblok;
  metaLinks?: LinkStoryblok[];
  lang?: "" | "en" | "de";
  component: "head";
  _uid: string;
  [k: string]: any;
}

export interface HeaderStoryblok {
  head: HeadStoryblok[];
  navigation: NavItemStoryblok[];
  component: "header";
  _uid: string;
  [k: string]: any;
}

export interface LinkStoryblok {
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "link";
  _uid: string;
  [k: string]: any;
}

export interface NavItemStoryblok {
  title?: string;
  description?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  button: ButtonStoryblok[];
  secondLevel?: SecondLevelStoryblok[];
  component: "nav-item";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  body?: (TeaserStoryblok | GridWrapperStoryblok | TagsContainerStoryblok | ContactWrapperStoryblok)[];
  pageColor: "" | "blue" | "mint";
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SecondLevelStoryblok {
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  thirdLevel?: ThirdLevelStoryblok[];
  component: "second-level";
  _uid: string;
  [k: string]: any;
}

export interface SocialStoryblok {
  label: string;
  link: string;
  media?: FooterMediaStoryblok[];
  component: "social";
  _uid: string;
  [k: string]: any;
}

export interface TagsContainerStoryblok {
  title: string;
  cards: CardStoryblok[];
  categories: CategoriesStoryblok[];
  component: "tags-container";
  _uid: string;
  [k: string]: any;
}

export interface TeaserStoryblok {
  items: TeaserItemStoryblok[];
  component: "teaser";
  _uid: string;
  [k: string]: any;
}

export interface TeaserItemStoryblok {
  image?: AssetStoryblok;
  label?: string;
  title?: string;
  text?: string;
  linkTo: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "teaser-item";
  _uid: string;
  [k: string]: any;
}

export interface ThirdLevelStoryblok {
  text: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "third-level";
  _uid: string;
  [k: string]: any;
}
